name: CI/CD Pipeline

on:
  push:
    branches:
      - working  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint frontend
      run: npm run lint
      
    - name: Type check (TypeScript)
      run: npm run typecheck
      
  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: ./backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint backend
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint-frontend, lint-backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install
  
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install
  
      # Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Build backend (if needed)
      - name: Build backend
        working-directory: ./backend
        run: npm run build
  auto-promote-to-main:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }} # Personal access token with repo scope

        - name: Configure Git
          run: |
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"

        - name: Merge working branch to main
          run: |
            git checkout main
            git pull
            git merge --no-ff working -m "Auto-merge working to main [skip ci]"
            git push origin main

  deploy:
    runs-on: ubuntu-latest
    needs: [build, auto-promote-to-main]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy Backend to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel --prod --token="$VERCEL_TOKEN"
